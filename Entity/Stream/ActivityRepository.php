<?php

namespace BrauneDigital\ActivityBundle\Entity\Stream;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends \Doctrine\ORM\EntityRepository
{
    public function latestForClass($className) {
        $query = $this->getEntityManager()->createQuery(
            'SELECT a FROM BrauneDigital\ActivityBundle\Entity\Stream\Activity a WHERE a.observedClass = :observedClass ORDER BY a.changeRevisionId DESC'
        )->setParameter('observedClass', $className);
        $query->setMaxResults(1);

        $activity = $query->getResult();

        if(sizeof($activity) == 1) {
            return $activity[0];
        }

        return null;
    }

    public function getLatestActivityForClassAndObject($className, $object) {
        $query = $this->getEntityManager()->createQuery(
            'SELECT a FROM BrauneDigital\ActivityBundle\Entity\Stream\Activity a WHERE a.observedClass = :observedClass AND a.auditedEntityId = :objId ORDER BY a.changeRevisionId DESC'
        )->setParameter('observedClass', $className)->setParameter('objId', $object->getId());

        $query->setMaxResults(1);

        $activity = $query->getResult();
        if(sizeof($activity) == 1) {
            return $activity;
        }

        return null;
    }

    public function getCreateRevision($className, $object) {
        $objId = $object->getId();

        $query = $this->getEntityManager()->createQuery(
            'SELECT a FROM BrauneDigital\ActivityBundle\Entity\Stream\Activity a WHERE a.observedClass = :observedClass AND a.auditedEntityId = :objId AND a.changeRevisionId = a.baseRevisionId ORDER BY a.changeRevisionId DESC'
        )->setParameter('observedClass', $className)->setParameter('objId', $objId);

        $query->setMaxResults(1);

        $activity = $query->getResult();
        if(sizeof($activity) == 1) {
            return $activity;
        }

        return null;
    }
}
